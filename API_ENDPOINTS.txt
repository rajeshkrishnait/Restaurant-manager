API ENDPOINTs:

1. /auth/create_managers - creates managers, only accessible to admins
needs JWT Token in header
POST method
request:{
    "email":"rajeshkrishnarajakumar@gmail.com",
    "password":"passwordchecker",
    "username":"raj",
    "phone":"7904601211",
    "role":"Manager",
    "status":"active",
}
response:
{
    "user": {
        "role": "Manager",
        "_id": "625911221f562b2e4c3a9d07",
        "email": "rajeshkrishnarajakumar@gmail.com",
        "phone": 7904601211,
        "status": "active",
        "createdAt": "2022-04-15T06:30:58.093Z",
        "updatedAt": "2022-04-15T06:30:58.093Z",
        "__v": 0
    }
}


2. /auth/sigin - sign in Managers and Admins
POST method
request:{
    "password":"passwordchecker",
    "username":"lok"
}
response:
{
    {
    "user": {
        "role": "Manager",
        "_id": "6259143f1aa6a82c246d3b73",
        "email": "lokeshwar@gmail.com",
        "name": "lokeshwar lokesh",
        "username": "lok",
        "phone": 9560121221,
        "status": "inactive",
        "createdAt": "2022-04-15T06:44:15.256Z",
        "updatedAt": "2022-04-15T06:44:15.256Z",
        "__v": 0
    },
    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjU5MTQzZjFhYTZhODJjMjQ2ZDNiNzMiLCJyb2xlIjoiQWRtaW4iLCJuYW1lIjoibG9rZXNod2FyIGxva2VzaCIsImlhdCI6MTY1MDAwNTE0Mn0.FvVNyUVMbj9mfSa8aLh8oRAgUSy6Mjog71lkh5hXWiw"
}
}

3. /table/create_table - creates table based on name. accessible only to admins
needs JWT Token in header
POST method
request{
        "name":"first table"
}
response{
    "tableDetails": {
        "status": true,
        "_id": "625a81910524774e5c7e81b8",
        "name": "first table",
        "qrCode": "9c6ed88f73a9c86af22883b003298cce7fb5b29af6b6ae71b68cd8947e36e37d",
        "createdAt": "2022-04-16T08:42:57.940Z",
        "updatedAt": "2022-04-16T08:42:57.940Z",
        "__v": 0
}
}

4. /table/refresh_qr - updates table Qr based on _id. accessible only to admins.
needs JWT token in header
PUT method
request{
    _id:"625a81910524774e5c7e81b8"
}
response{
    "tableDetails": {
        "status": true,
        "_id": "625a81910524774e5c7e81b8",
        "name": "first table",
        "qrCode": "958ec7f66da6d8e08b0f8301797842a10c6e5519c22c840c5e4ad291926aa624",
        "createdAt": "2022-04-16T08:42:57.940Z",
        "updatedAt": "2022-04-16T09:13:44.513Z",
        "__v": 0
    }
}


5. /table/get_tables - get details of all tables. Accessible only to Admins
pass occupied=true or occupied=false in the query to get tables that are occupied or not occupied. No occupied in query returns all tables
ex:
http://localhost:3000/api/table/get_tables?occupied=false
http://localhost:3000/api/table/get_tables?occupied=true
need JWT token in header
GET method

request{

}
response{
    "tableDetails": [
        {
            "status": true,
            "_id": "625a81910524774e5c7e81b8",
            "name": "first table",
            "qrCode": "958ec7f66da6d8e08b0f8301797842a10c6e5519c22c840c5e4ad291926aa624",
            "createdAt": "2022-04-16T08:42:57.940Z",
            "updatedAt": "2022-04-16T09:13:44.513Z",
            "__v": 0
        },
        {
            "status": true,
            "_id": "625a8a3f0917215290784cbd",
            "name": "second table",
            "qrCode": "b8772ee4cca2f99c748007509b69994803c616ee96a2bd8d849f13ec74c8e193",
            "createdAt": "2022-04-16T09:19:59.496Z",
            "updatedAt": "2022-04-16T09:19:59.496Z",
            "__v": 0
        }
    ]
}
6. /tables/update_table - updates table values based on _id. accessible only to admin
PUT method.
needs token in header
pass the values that you want to update. (name or status).
request{
    "_id":"625a8a3f0917215290784cbd",
    "status":true
}
resposne{
    "tableDetail": {
        "status": true,
        "_id": "625a8a3f0917215290784cbd",
        "restaurant": "Namma Sappadu",
        "name": "R1",
        "qrCode": "b8772ee4cca2f99c748007509b69994803c616ee96a2bd8d849f13ec74c8e193",
        "createdAt": "2022-04-16T09:19:59.496Z",
        "updatedAt": "2022-04-18T13:46:58.570Z",
        "__v": 0
    }
}
7. /table/delete_table - deletes table based on _id. accessible only to admin
DELETE method
needs token in header
request{
        "_id":"625aeb6d5f460852145d7c27"
}
response{
    "status": true
}

8.  /users/me - fetches current user details
GET method
needs access token in header
request{


response{
    "user": {
        "role": "Admin",
        "_id": "625a80b1b851d949d4d16835",
        "email": "restaurantmanagercorp@gmail.com",
        "username": "RestaurantManagerCorp",
        "phone": 7904601211,
        "status": "active",
        "createdAt": "2022-04-16T08:39:13.177Z",
        "updatedAt": "2022-04-16T08:39:13.177Z",
        "__v": 0
    }
}

9. /admin/get_managers - fetches all managers. accessible only to admins
GET method
needs access token in header
request{

}
response{
    "managerDetails": [
        {
            "role": "Manager",
            "_id": "625a6fc3ffd3a44a90aa3536",
            "email": "rajeshkrishnarajakumar@gmail.com",
            "username": "raj",
            "phone": 7904601211,
            "status": "active",
            "createdAt": "2022-04-16T07:26:59.708Z",
            "updatedAt": "2022-04-16T07:26:59.708Z",
            "__v": 0
        },
        {
            "role": "Manager",
            "_id": "625a723a14d61b25e861cc8f",
            "email": "lokeshvar@gmail.com",
            "username": "lok",
            "phone": 7904601211,
            "status": "active",
            "createdAt": "2022-04-16T07:37:30.580Z",
            "updatedAt": "2022-04-16T07:37:30.580Z",
            "__v": 0
        }
    ]
}

10. /admin/delete_manager - deletes manager with specified _id. accessible only to admin
DELETE method
needs access token in header

request{
    "_id" : ""
}
response{
    status:true
}

11. /admin/refresh_qr - refreshes restaurant qr. accessible only to admins
PUT method
needs access token in header
request{

}
response{
    "restaurantDetails": {
        "_id": "625bab55dfa9f8cc1a0d23c5",
        "name": "Namma Sappadu",
        "qr": "b4a19dc0-5bd6-4837-a7c7-067c9627aa4e",
        "updatedAt": "2022-04-17T06:13:39.027Z"
    }
}

12. /manager/create_food - creates food based on the details in the body. accessible only to manager
POST method
needs access token in header

request{
    "name":"idli",
    "price":100,
    "category":"dinner"
    "image":"firebase_url"
}
response{
    "status":true
}

13. /manager/get_food - fetches all food. accessible only to manager. use ?inMenu=true as query parameter in url, http://localhost:3000/api/manager/get_food?inMenu=true, for retrieving menu food
GET method
needs access token in header
request{

}
response{
    "status": [
        {
            "inMenu": false,
            "_id": "625b03f057132902e450444e",
            "name": "dosa",
            "price": 12,
            "category": "dinner",
            "createdAt": "2022-04-16T17:59:12.849Z",
            "updatedAt": "2022-04-16T17:59:12.849Z",
            "__v": 0
        },
        {
            "inMenu": false,
            "_id": "625b042657132902e4504455",
            "name": "idli",
            "price": 100,
            "category": "dinner",
            "createdAt": "2022-04-16T18:00:06.903Z",
            "updatedAt": "2022-04-16T18:00:06.903Z",
            "__v": 0
        }
    ]
}

14. /manager/update_food - updates food based on id. accessible only to manager [for menu change, put inMenu:"true"||"false" in the query]
PUT method
needs access token in header
request{
    "_id":"625b03f057132902e450444e",
    "inMenu":true,
    "name":"dosaa"
}
response{
    "foodDetail": {
        "inMenu": true,
        "_id": "625b03f057132902e450444e",
        "name": "dosaa",
        "price": 12,
        "category": "dinner",
        "createdAt": "2022-04-16T17:59:12.849Z",
        "updatedAt": "2022-04-16T18:17:04.860Z",
        "__v": 0
    }
}

15. /manager/delete_food - deletes food based on id. accessible only to manager
DELETE method
needs access token in header
request{
    "_id":"625b03f057132902e450444e"
}
response{
    "status": true
}


//ignore error shown in services/OTP.ts, that is due to typescript. will fix it in sometime
16. /otp/email_route - sends otp via email. 
POST method
request{
    "email":"krishnarajesh1998@gmail.com"
}
response{
    "verficationKey":"TXhk2gKKRbN6LW1qiEheCOcxAp3YQNzff5qb/NOxXP9YHhnRK71tJXzVk8z94+UkFkNx7Wc2IOg5rv0ouHQKmGwVNiQMDnyawD91BKThHaJpPKuKzNG1gAi53/Yt4gU5+B8ycMbKf7Jgre1CuyRlJ0INq+mCRZgEqrKat/93mpJXOznEqZS6umWBvvUWAthol62TK/1P5ubunqkbh3emDA==",
    "otp":"0Z7juo",
    "email":"krishnarajesh1998@gmail.com"
}

17. /otp/verify_otp - verifies otp
POST method
request{
    "verificationKey":"r0ssXoXslhOqXfpmeHoXio6O+Y5RFAScn+yWu8ukTWrazqsPiwsZ6kwPqcUbgz/s0zRE71j3duWVBjmslWXRR1AfBkrCWMTJCMkMLKCNfTc0MP/jeVU8h0lMJPcZAw/jF0ENRynHJQ9v80Ffc2wE/CwXcflQk7bvHgGjwpaSiVdOfJIXUjoAPD+k55i2bYIjDA7i3Z7rPypn2QrCEIsm7w==",
    "otp":"zRbZ1LZ",
    "check":"krishnarajesh1998@gmail.com"
}
response{
    "status":true,
    "access_token":""
}

18. /cusomer/get_foods - gets food in menu/ accessible only to customers
GET method
request{

}

response{
    "foodDetails": [
        {
            "inMenu": true,
            "_id": "625b0bd653b5f64920702c8e",
            "restaurant": "Namma Sappadu",
            "name": "vada",
            "price": 150,
            "category": "lunch",
            "createdAt": "2022-04-16T18:32:54.647Z",
            "updatedAt": "2022-04-16T18:32:54.647Z",
            "__v": 0
        },
        {
            "inMenu": true,
            "_id": "625b0be653b5f64920702c90",
            "restaurant": "Namma Sappadu",
            "name": "biriyani",
            "price": 150,
            "category": "lunch",
            "createdAt": "2022-04-16T18:33:10.040Z",
            "updatedAt": "2022-04-16T18:33:10.040Z",
            "__v": 0
        }
    ]
}